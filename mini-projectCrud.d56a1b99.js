function e(e){return e.map(e=>`
    <li class="post-card" data-id="${e.id}">
    <img class="photo-post" src="${e.imageUrl}" alt="photo" />
        <p class="user">${e.userName}</p>
        <div class="stats">
            <p id="like" class="stats-item">
                <button class="like-button"><i class="material-icons">thumb_up</i></button>
                <span class="likes-p">${e.likes}</span>
            </p>
            <p id="comment" class="stats-item">
                <button class="comment-button"><i class="material-icons">comment</i></button>
                <span class="commments-count">${e.comments}</span>
            </p>
        </div>
        <button type="click" class="edit">Edit</button>
        <button type="click" class="delete">Delete</button>
    </li>
    `).join("")}async function t(){try{return await fetch("https://6882a21521fa24876a9b6374.mockapi.io/posts").then(e=>e.json())}catch(e){console.log(e)}}async function o(e){try{return await fetch("https://6882a21521fa24876a9b6374.mockapi.io/posts",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=UTF-8"}}).then(e=>e.json())}catch(e){console.log(e)}}async function n(e,t){try{return await fetch(`https://6882a21521fa24876a9b6374.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json())}catch(e){if(!res.ok)throw Error("Failed to update post");return res.json()}}async function s(e){try{return await fetch(`https://6882a21521fa24876a9b6374.mockapi.io/posts/${e}`,{method:"DELETE"})}catch(e){console.log(e)}}async function c(e,t){try{return await fetch(`https://6882a21521fa24876a9b6374.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({likes:e})}).then(e=>e.json())}catch(e){console.log(e)}}async function l(e,t,o){try{return await fetch(`https://6882a21521fa24876a9b6374.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({comments:o,commentList:e})}).then(e=>e.json())}catch(e){console.log(e)}}document.querySelector(".add").addEventListener("click",()=>{document.querySelector(".modal-backdrop").classList.remove("hidden")}),document.querySelector(".close-modal").addEventListener("click",()=>{document.querySelector(".modal-backdrop").classList.add("hidden")}),document.querySelector(".close-modalEdit").addEventListener("click",()=>{document.querySelector(".modal-backdropEdit").classList.add("hidden")}),t().then(t=>{console.log(t[0].commentList),document.querySelector(".posts").innerHTML=e(t),console.log(t)}),document.querySelector("#new-post-form").addEventListener("submit",n=>{n.preventDefault();let s=n.target.elements.url.value,c={userName:n.target.elements.Username.value,imageUrl:s,likes:0,comments:0};console.log(c),o(c).then(()=>{t().then(t=>{document.querySelector(".posts").innerHTML=e(t),document.querySelector(".modal-backdrop").classList.add("hidden")})}),n.target.elements.Username.value="",n.target.elements.url.value=""});let a=null;document.querySelector(".posts").addEventListener("click",e=>{if(e.target.closest(".like-button")){let t=e.target.closest(".like-button"),o=t.closest(".post-card"),n=o.dataset.id,s=o.querySelector(".likes-p"),l=Number(s.textContent);if(t.classList.contains(".liked"))return;s.textContent=l+=1,t.classList.add(".liked"),c(l,n)}e.target.closest(".comment-button")&&(document.querySelector(".modal-backdropCommments").classList.remove("hidden"),a=e.target.closest(".comment-button").closest(".post-card").dataset.id,t().then(e=>{var t;document.querySelector(".comments").innerHTML=Array.isArray(t=e.find(e=>e.id===a).commentList)?t.map(e=>`
            <li data-comment="This is a comment to delete" class="comment-card">
                <div class="div-comment"><p class="comment-info">${e}</p></div>
                <button class="delete-comment">Delete</button>
            </li>
        `).join(""):(console.warn("renderComments expected an array, but got:",t),"<li class='comment-card'>No comments yet.</li>")}))}),document.querySelector(".posts").addEventListener("click",o=>{o.target.closest(".delete")&&s(o.target.closest(".post-card").getAttribute("data-id")).then(()=>{t().then(t=>{console.log(t),document.querySelector(".posts").innerHTML=e(t)})})});let r=null;document.querySelector(".posts").addEventListener("click",e=>{if(e.target.closest(".edit")){let t=e.target.closest(".edit").closest(".post-card");r=t.dataset.id,document.querySelector("#username").value=t.querySelector(".user").textContent,document.querySelector("#url").value=t.querySelector(".photo-post").src,document.querySelector(".modal-backdropEdit").classList.remove("hidden")}}),console.log(r),document.querySelector(".edit-button").addEventListener("click",()=>{let o={userName:document.querySelector("#username").value,imageUrl:document.querySelector("#url").value};console.log(o),console.log(r),n(o,r).then(()=>t()).then(t=>{document.querySelector(".posts").innerHTML=e(t),document.querySelector(".modal-backdropEdit").classList.add("hidden")}).catch(e=>{console.error("Error updating post:",e)})}),document.querySelector('#search-form input[name="query"]').addEventListener("input",e=>{let t=e.target.value.toLowerCase();document.querySelectorAll(".post-card").forEach(e=>{e.querySelector(".user").textContent.toLowerCase().includes(t)?e.style.display="block":e.style.display="none"})}),document.querySelector(".close-comment-button").addEventListener("click",()=>{document.querySelector(".modal-backdropCommments").classList.add("hidden")}),document.querySelector(".post-comment-button").addEventListener("click",()=>{let o=document.querySelector("#info").value;t().then(n=>{let s=n.find(e=>e.id===a);console.log(s.commentList);let c=[...s.commentList,o],r=c.length;l(c,a,r).then(()=>{t().then(t=>{document.querySelector(".posts").innerHTML=e(t)})})}),document.querySelector(".modal-backdropCommments").classList.add("hidden"),document.querySelector("#info").value=""}),document.querySelector(".comments").addEventListener("click",o=>{if(o.target.closest(".delete-comment")){let n=o.target.closest(".delete-comment").closest("li.comment-card").querySelector(".comment-info").textContent.trim();console.log("Deleting comment:",n),t().then(o=>{let s=o.find(e=>e.id===a);console.log("Original comments:",s.commentList);let c=[...s.commentList],r=c.indexOf(n);-1!==r&&c.splice(r,1);let d=c.length;console.log("Updated comments:",c),l(c,a,d).then(()=>{t().then(t=>{document.querySelector(".posts").innerHTML=e(t)})}),document.querySelector(".modal-backdropCommments").classList.add("hidden")})}});
//# sourceMappingURL=mini-projectCrud.d56a1b99.js.map
